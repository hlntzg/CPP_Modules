/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   RobotomyRequestForm.cpp                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hutzig <hutzig@student.hive.fi>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/03/31 16:48:43 by hutzig            #+#    #+#             */
/*   Updated: 2025/04/03 15:38:39 by hutzig           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "RobotomyRequestForm.hpp"

RobotomyRequestForm::RobotomyRequestForm(void) : AForm("RobotomyRequestForm", 72, 45), _target("DefaultRobotomy") {}

RobotomyRequestForm::RobotomyRequestForm(std::string target) : AForm("RobotomyRequestForm", 72, 45), _target(target) {}

RobotomyRequestForm::RobotomyRequestForm(const RobotomyRequestForm &other) : AForm(other), _target(other._target) {}

RobotomyRequestForm::~RobotomyRequestForm(void) {}

RobotomyRequestForm	&RobotomyRequestForm::operator=(const RobotomyRequestForm &other) {
	if (this != &other) {
		AForm::operator=(other);
		this->_target = other._target;
	}
	return (*this);
}

/**
 * std::tim(0):
 *  -- std::time: is a function in the C++ <ctime> header that returns the current
 *    calendar time as the number of seconds elapsed since January 1,1970
 *    (the Unix epoch).
 *  -- When you pass 0 to std::time(0), it returns the current time as an integer
 *    representing the number of seconds since that epoch.
 *  -- The number of seconds is typically a constantly increasing value, meaning
 *     it will vary each time you call std::time(0).
 *
 * std::srand(...):
 *  -- std::srand is a function in the C++ <cstdlib> header that sets the seed for
 *     the pseudo-random number generator used by std::rand().
 *  -- By providing a seed to std::srand, you ensure that the random numbers
 *     generated by std::rand() will be different each time your program runs
 *     (since the seed changes over time).
 *  -- Without seeding, std::rand() would produce the same sequence of numbers
 *     every time you run the program, which is not useful for random behavior.
 *
 * So, std::srand(std::time(0)) ensures that each time you run your program,
 * the random number sequence will be different because the time at the moment
 * of execution will be different.
 */

void	RobotomyRequestForm::execute(Bureaucrat const &executor) const {
	if (this->getSignedForm() == false)
		throw AForm::FormNotSignedException();
	if (this->getGradeToExecute() < executor.getGrade())
		throw AForm::GradeTooLowException();

	std::cout << "[ ROBOTOMY ] ... drilling noises ..." << std::endl;

	srand(std::time(0));
	if (std::rand() % 2)
		std::cout << "[ ROBOTOMY ] " << this->_target << " has been robotomized successfully." << std::endl;
	else
		std::cout << "[ ROBOTOMY ] " << this->_target << " robotomization failed." << std::endl;
}
